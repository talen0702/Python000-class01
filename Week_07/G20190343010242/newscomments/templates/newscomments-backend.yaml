apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: {{ .Release.Namespace }}
data:
{{- range $key, $value := .Values.backend_config }}
  {{ $key }}: {{ $value | quote }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: newscomments-backend
  namespace: {{ .Release.Namespace }}
  labels:
    app: newscomments
    tier: backend
spec:
  replicas: {{ .Values.backendReplicas }}
  selector:
    matchLabels:
      app: newscomments
      tier: backend
  template:
    metadata:
      labels:
        app: newscomments
        tier: backend
    spec:
      initContainers:
      - name: init-db-ready
        image: busybox
        command: ['/bin/sh', '-c']
        args:
          - echo "Waiting for mysql at mysql-service to go live...";
          - until (nslookup mysql-service > /dev/null) do echo "Waiting for mysql."; sleep 2; done
      containers:
      - name: backend
        image: {{ .Values.container_repo }}/newscomments-backend
        ports:
        - name: http-server
          containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DB_ADDR
          value: "mysql-service:{{ .Values.mysqlPort }}"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db_username
              name: newscomments-secrets
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              key: db_password
              name: newscomments-secrets
        {{- range $key, $value := .Values.backend_config }}
        - name: {{ $key | upper }}
          valueFrom:
            configMapKeyRef:
              key: {{ $key }}
              name: backend-config
        {{- end }}
        {{- range $key, $value := .Values.common }}
        - name: {{ $key | upper }}
          valueFrom:
            configMapKeyRef:
              key: {{ $key }}
              name: common-config
        {{- end }}



